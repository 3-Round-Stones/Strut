// Generated by CoffeeScript 1.3.3
/*
@author Tantaman
*/

requirejs.config({
  paths: {
    "css": "vendor/amd_plugins/css",
    "text": "vendor/amd_plugins/text"
  }
});

window.browserPrefix = "";

if ($.browser.mozilla) {
  window.browserPrefix = "-moz-";
} else if ($.browser.msie) {
  window.browserPrefix = "-ms-";
} else if ($.browser.opera) {
  window.browserPrefix = "-o-";
} else if ($.browser.webkit) {
  window.browserPrefix = "-webkit-";
}

if (!(window.localStorage != null)) {
  window.localStorage = {
    setItem: function() {},
    getItem: function() {},
    length: 0
  };
}

$(function() {
  var continuation;
  if (window.location.href.indexOf("preview=") !== -1 || $("body > .bg").length > 0) {
    return requirejs(["ui/preview_export/Templates", "ui/preview_export/impress"], function(Templates, startImpress) {
      var $head;
      $head = $("head");
      $head.append(Templates.Head());
      $("body").addClass("impress-not-supported");
      return $(function() {
        var alreadyLoaded, idx, presentation;
        alreadyLoaded = $("body > .bg").length > 0;
        if (!alreadyLoaded) {
          idx = window.location.href.indexOf("=");
          presentation = window.location.href.substring(idx + 1);
          $("body").html(unescape(presentation));
          startImpress(document, window);
          return impress().init();
        }
      });
    });
  } else {
    requirejs(["vendor/backbone", "state/DefaultState"], function(Backbone, DefaultState) {
      Backbone.sync = function(method, model, options) {
        if (options.keyTrail != null) {
          return options.success(DefaultState.get(options.keyTrail));
        }
      };
      window.slideConfig = {
        size: {
          width: 1024,
          height: 768
        }
      };
      return continuation();
    });
    return continuation = function() {
      return requirejs(["ui/editor/Editor", "model/presentation/Deck"], function(Editor, Deck) {
        var deck, editor;
        deck = new Deck();
        editor = new Editor({
          model: deck
        });
        window.zTracker = {
          z: 0,
          next: function() {
            return ++this.z;
          }
        };
        $("body").append(editor.render());
        return deck.newSlide();
      });
    };
  }
});
