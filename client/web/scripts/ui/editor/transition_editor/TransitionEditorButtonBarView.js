// Generated by CoffeeScript 1.2.1-pre

define(["../button_bar/AbstractButtonBarView"], function(AbstractButtonBarView) {
  var buttonBarOptions;
  buttonBarOptions = {
    rotateX: function(e) {},
    rotateY: function(e) {},
    rotateZ: function(e) {}
  };
  return AbstractButtonBarView.extend({
    events: function() {
      return {
        "keypress *[data-option]": "optionChosen",
        "paste *[data-option]": "optionChosen"
      };
    },
    initialize: function() {
      AbstractButtonBarView.prototype.initialize.call(this, buttonBarOptions);
      return this.model.on("change:slideRotations", this._slideRotationsChanged, this);
    },
    _slideRotationsChanged: function(model, slideRotations) {
      return this.partialRender(slideRotations);
    },
    partialRender: function(slideRotations, sceneRotations) {
      slideRotations || (slideRotations = this.model.slideRotations());
      if (slideRotations != null) {
        return this.updateRotationControls(this.$slideRotCtrls, slideRotations);
      }
    },
    updateRotationControls: function($which, rotations) {
      return $which.each(function(idx, elem) {
        return $(elem).val(rotations[idx]);
      });
    },
    render: function() {
      console.log(this.$el);
      this.$slideRotCtrls = this.$el.find(".slideRotations input");
      return this.partialRender();
    }
  });
});
