// Generated by CoffeeScript 1.2.1-pre
/*
@author Matt Crinklaw-Vogt
*/

define(function() {
  var DragControl, events;
  events = ["mousedown", "mousemove", "mouseup"];
  return DragControl = (function() {

    DragControl.name = 'DragControl';

    function DragControl($el, stopProp) {
      this.$el = $el;
      this.stopProp = stopProp;
      this.dragging = false;
      this._mousemove = this.mousemove.bind(this);
      this._mouseup = this.mouseup.bind(this);
      this._mouseout = this._mouseup;
      $(document).bind("mousemove", this._mousemove);
      $(document).bind("mouseup", this._mouseup);
      this.$el.bind("mousedown", this.mousedown.bind(this));
      this.$el.bind("mouseup", this._mouseup);
    }

    DragControl.prototype.dispose = function() {
      $(document).unbind("mousemove", this._mousemove);
      return $(document).unbind("mouseup", this._mouseup);
    };

    DragControl.prototype.mousedown = function(e) {
      this.dragging = true;
      if (this.stopProp) return e.stopPropagation();
    };

    DragControl.prototype.mousemove = function(e) {
      var dx, dy, myPos, pos;
      if (this.dragging) {
        myPos = this.$el.offset();
        pos = {
          x: e.pageX,
          y: e.pageY
        };
        dx = pos.x - myPos.left;
        dy = pos.y - myPos.top;
        this.$el.trigger("deltadrag", [
          {
            dx: dx,
            dy: dy
          }
        ]);
        if (this.stopProp) return e.stopPropagation();
      }
    };

    DragControl.prototype.mouseup = function(e) {
      this.dragging = false;
      return true;
    };

    return DragControl;

  })();
});
